<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- html 내에서 link 등을 통해 어떤 파일들을 열어 볼 수 있도록 하려면 -->
	<!-- 해당 파일들이 보관되는 폴더를 resources로 열어 주어야 한다. -->
	<!-- 여기 지정된 폴더에 저장된 파일들은 static 파일로 간주하고 -->
	<!-- tomcat은 아무런 일도 하지 않는다 -->
	<!-- 다만 브라우저가 직접 파일에 접근해서 읽을 수 있도록 개방 해줄 뿐이다 -->
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.biz.memo02.controller" />
	<context:component-scan base-package="com.biz.memo02.service" />
	
	
	
</beans:beans>
